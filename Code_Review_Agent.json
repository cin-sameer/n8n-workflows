{
  "name": "Code Review-Agent",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "github-code",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [-220, -280],
      "id": "webhook-node-id",
      "name": "Webhook",
      "webhookId": "<YOUR_WEBHOOK_ID>"
    },
    {
      "parameters": {
        "mode": "runOnceForEachItem",
        "jsCode": "// Extract full repo name and changed file from GitHub push webhook\nconst repo = $json.repository?.full_name || \"user/repo-name\";\nconst files = $json.head_commit?.modified || $json.head_commit?.added || [\"code.py\"];\n\nif (!repo || files.length === 0) {\n  return {\n    json: {\n      message: \"No repo or files detected\",\n      repo,\n      files: []\n    }\n  };\n}\n\nconst file = files[0];\n\nreturn {\n  json: {\n    file,\n    repo,\n    apiUrl: `https://api.github.com/repos/${repo}/contents/${file}`\n  }\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-40, -280],
      "id": "code-node-id",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "={{ $json.apiUrl }}",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer <YOUR_GITHUB_TOKEN>"
            },
            {
              "name": "Accept",
              "value": "application/vnd.github.v3+json"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [140, -280],
      "id": "http-node-id",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "=Please review the following code  and provide:\n\n1. A quality score (0-5) based on:\n   - Code quality\n   - Readability\n   - Maintainability\n   -comments\n\n2. A brief explanation for the score.\n\n3. Specific suggestions for improvement,put them on bullet points, if any.\n\nHere is the code:\n\n{{$json[\"data\"]}}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [320, -280],
      "id": "openai-node-id",
      "name": "Message a model",
      "credentials": {
        "openAiApi": "<YOUR_OPENAI_API_KEY>"
      }
    },
    {
      "parameters": {
        "chatId": "<YOUR_TELEGRAM_CHAT_ID>",
        "text": "=\ud83d\udcc4 *Code Review Report:*\n\n*File:* {{$node[\"Code\"].json[\"file\"] || \"Unknown\"}}\n\n*Score:* {{$node[\"Message a model\"].json[\"choices\"][0][\"message\"][\"content\"][\"quality_score\"]}}\n\n*Explanation:* {{$node[\"Message a model\"].json[\"choices\"][0][\"message\"][\"content\"][\"explanation\"]}}\n\n*Suggestions:*\n{{ $node[\"Message a model\"].json[\"choices\"][0][\"message\"][\"content\"][\"suggestions\"].map(s => '- ' + s).join('\\n') }}\n",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [220, -100],
      "id": "telegram-node-id",
      "name": "Send a text message",
      "webhookId": "<YOUR_WEBHOOK_ID>",
      "credentials": {
        "telegramApi": "<YOUR_TELEGRAM_BOT_TOKEN>"
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [[{ "node": "Code", "type": "main", "index": 0 }]]
    },
    "Code": {
      "main": [[{ "node": "HTTP Request", "type": "main", "index": 0 }]]
    },
    "HTTP Request": {
      "main": [[{ "node": "Message a model", "type": "main", "index": 0 }]]
    },
    "Message a model": {
      "main": [[{ "node": "Send a text message", "type": "main", "index": 0 }]]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "your-version-id",
  "id": "workflow-id",
  "tags": []
}
